{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","type","placeholder","onChange","handleChange","Component","App","React","useState","setMonsters","searchField","setSearchField","useEffect","fetch","then","res","json","users","filteredMonsters","filter","m","toLowerCase","includes","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAGaA,EAAO,SAACC,GAAD,OACnB,sBAAKC,UAAU,iBAAf,UACC,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCFRC,EAAW,SAACR,GAExB,OADAS,QAAQC,IAAIV,GAEX,qBAAKC,UAAU,YAAf,SAA4BD,EAAMW,SAASC,KAAI,SAACR,GAAD,OAAa,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLpEQ,G,MAAY,SAACb,GACzB,OAAO,uBAAOC,UAAU,SAASa,KAAK,SAASC,YAAaf,EAAMe,YAAaC,SAAUhB,EAAMiB,iBCClEC,YA4DfC,MAjCf,WACC,MAAkCC,IAAMC,SAAS,IAAjD,mBAAQV,EAAR,KAAkBW,EAAlB,KACA,EAAwCF,IAAMC,SAAS,IAAvD,mBAAQE,EAAR,KAAqBC,EAArB,KASA,GANAJ,IAAMK,WAAU,WACfC,MAAM,8CACJC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAWR,EAAYQ,QAC5B,KAEEnB,EACJ,OAAO,6CAGR,IAAMoB,EACW,KAAhBR,EACGZ,EACAA,EAASqB,QAAO,SAACC,GAAD,OAAOA,EAAE3B,KAAK4B,cAAcC,SAASZ,EAAYW,kBAMrE,OACC,sBAAKjC,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,CAAWgB,aAPQ,SAACmB,GACrBZ,EAAeY,EAAEC,OAAOC,QAMgBvB,YAAY,oBACnD,cAAC,EAAD,CAAUJ,SAAUoB,QChDRQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3ceb16a1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n\t<div className=\"card-container\">\r\n\t\t<img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n\t\t<h2>{props.monster.name}</h2>\r\n\t\t<h2>{props.monster.email}</h2>\r\n\t</div>\r\n);\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\n\r\nimport { Card } from '../card/card';\r\n\r\nexport const CardList = (props) => {\r\n\tconsole.log(props);\r\n\treturn (\r\n\t\t<div className=\"card-list\">{props.monsters.map((monster) => <Card key={monster.id} monster={monster} />)}</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = (props) => {\r\n\treturn <input className=\"search\" type=\"search\" placeholder={props.placeholder} onChange={props.handleChange} />;\r\n};\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list';\nimport { SearchBox } from './components/search-box/search-box';\n\nexport class AppClass extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\ttext: 'Hello'\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<p>{this.state.text}</p>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.setState({ text: 'Bye' });\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tChange Text\n\t\t\t\t\t</button>\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction App() {\n\tconst [ monsters, setMonsters ] = React.useState([]);\n\tconst [ searchField, setSearchField ] = React.useState('');\n\n\t// https://jsonplaceholder.typicode.com/users\n\tReact.useEffect(() => {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((users) => setMonsters(users));\n\t}, []); // componentDidMount\n\n\tif (!monsters) {\n\t\treturn <div>Loading...</div>;\n\t}\n\n\tconst filteredMonsters =\n\t\tsearchField === ''\n\t\t\t? monsters\n\t\t\t: monsters.filter((m) => m.name.toLowerCase().includes(searchField.toLowerCase()));\n\n\tconst handleChange = (e) => {\n\t\tsetSearchField(e.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t<SearchBox handleChange={handleChange} placeholder=\"search monsters\" />\n\t\t\t<CardList monsters={filteredMonsters} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}